package edu.stanford.nlp.pipeline;

option java_package = "edu.stanford.nlp.kbp.slotfilling.common";
option java_outer_classname = "KBPProtos";

import "CoreNLP.proto";

/**
 * Some additional annotations on a sentence
 */
extend Sentence {
  optional Span entitySpan       = 101;
  optional Span slotValueSpan    = 102;
  repeated string allAntecedents = 104;  // All antecedents in the sentence
  optional string docid          = 105;  // The docid this sentence came from, in case it's not a part of a document.
}

/**
 * Some additional annotations on a token
 */
extend Token {
  optional string antecedent        = 101;  // The antecedent of this token
}

message Span {
  required uint32 start = 1;
  required uint32 end   = 2;
}

/**
 * A representation of a KBPEntity and KBPOFficialEntity
 */
message KBPEntity {
  required string name                   = 1;
  optional string type                   = 2;
  optional string id                     = 3;
  optional string queryId                = 4;
  repeated string ignoredSlots           = 5;
  optional string representativeDocument = 6;
}

/**
 * A representation of a KBPair and KBTriple
 */
message KBTuple {
  required KBPEntity entity    = 1;
  required KBPEntity slotValue = 2;
  optional string    relation  = 3;
}

/**
 * A representation of a KBPRelationProvenance
 */
message KBPRelationProvenance {
  required string docid                = 1;
  required string indexName            = 2;
  optional uint32 sentenceIndex        = 3;
  optional Span   entityMention        = 4;
  optional Span   slotValueMention     = 5;
  optional Sentence containingSentence = 6;
  optional double score                = 7;
}

/**
 * A representation of a KBPSlotFill
 */
message KBPSlotFill {
  required KBTuple kbEntry                  = 1;
  optional KBPRelationProvenance provenance = 2;
  optional double score                     = 3;
}

/**
 * A representation of an EntityContext (for entity linking)
 */
message EntityContext {
  required KBPEntity entity       = 1;
  optional Sentence sentence      = 2;
  optional Span     entitySpan    = 3;
  repeated KBPSlotFill properties = 4;
}